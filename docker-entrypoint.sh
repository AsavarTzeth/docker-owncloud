#!/bin/bash
set -e

# Set default values for configurations
: ${OC_DOMAIN_NAME:=cloud.example.com} # IDEA: Get default from hostname env var somehow?
: ${OC_SSL_CERT:=/etc/ssl/nginx/cloud.example.com.crt} # IDEA: Make this a shared volume in Dockerfile, so it can be stored.
: ${OC_SSL_CERT_KEY:=/etc/ssl/nginx/cloud.example.com.key}
#: ${PHP_FPM_LISTEN_TYPE} Check if this env var is shared at link
# Check if /etc/php5/fpm/php.ini should be added here or php5-fpm. Then again, if vars are shared.
: ${OC_DB_TYPE:=sqlite}
: ${OC_DB_NAME:=owncloud}

# Common config edit function
set_config() {
    key="$1"
    value="$2"
    # Do a loop so sed can scale with number of files/options
    for i in $(find $CONF_DIR -type f); do
        sed -ri "s|\S*($key\s+).*|\1 $value|g" $i
    done
}

# Apply default or user specified options to config files
set_config 'server_name' "$OC_DOMAIN_NAME" # Should default to hostname env var of container
set_config 'ssl_certificate' "$OC_SSL_CERT"
set_config 'ssl_certificate_key' "$OC_SSL_CERT_KEY"
# Configuration in owncloud config file
set_config 'dbtype' "$OC_DB_TYPE"
set_config 'dbname' "$OC_DB_NAME"
set_config 'dbpassword' "$OC_DB_PASSWORD" # This should work exactally like wordpress
set_config 'dbhost' "$OC_DB_HOST" # This should be set by checking PHP_FPM_LISTEN and copying
set_config 'passwordsalt' "$OC_DB_PASSWORD_SALT" # Just like wordpress this could be set but randomly generated by default
set_config 'forcessl' "$OC_FORCE_SSL"
set_config 'apptstoreurl' "$OC_APP_STORE_URL"
set_config 'default_language' "$OC_LANGUAGE"
set_config 'mail_domain' "$OC_MAIL_DOMAIN" # Should be set to default to OC_DOMAIN_NAME
set_config 'mail_from_address' "$MAIL_FROM"
set_config 'loglevel' "$OC_LOG_LEVEL"
set_config 'logtimezone' "$OC_LOG_TIMEZONE"
set_config 'memcached_servers' "$OC_MEMCACHED_SERVERS" # Needs modification to handle arrarys

#set_config 'listen' "$PHP_FPM_LISTEN"
#opt_install # IDEA: Optional installation and config of php5 cache. Check wordpress entrypoint again.

exec "$@"